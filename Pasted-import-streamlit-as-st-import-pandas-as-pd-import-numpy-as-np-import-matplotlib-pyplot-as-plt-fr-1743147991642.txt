import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from utils.federated_learning import (
    FederatedModelManager, 
    FederatedDataSimulator,
    run_federated_learning_simulation
)

def train_federated_model():
    st.write("Starting Federated Learning...")
    results = run_federated_learning_simulation()
    
    # Extract training loss and accuracy from results (Assuming results contain these keys)
    loss = results.get("loss", [])
    accuracy = results.get("accuracy", [])
    epochs = list(range(1, len(loss) + 1))
    
    # Plot training loss
    st.write("### Training Loss")
    fig, ax = plt.subplots()
    ax.plot(epochs, loss, label="Loss", color='red')
    ax.set_xlabel("Epochs")
    ax.set_ylabel("Loss")
    ax.set_title("Training Loss Over Epochs")
    ax.legend()
    st.pyplot(fig)
    
    # Plot accuracy
    st.write("### Training Accuracy")
    fig, ax = plt.subplots()
    ax.plot(epochs, accuracy, label="Accuracy", color='blue')
    ax.set_xlabel("Epochs")
    ax.set_ylabel("Accuracy")
    ax.set_title("Training Accuracy Over Epochs")
    ax.legend()
    st.pyplot(fig)
    
    st.write("### Final Training Results")
    st.write(results)

def benchmark_ai_model():
    st.write("Running AI Model Benchmarking...")
    # Placeholder for benchmarking logic
    comparison_results = {
        "DeepCRISPR": 0.85,
        "CRISPR-Net": 0.88,
        "Cas-OFFinder": 0.81,
        "CHOPCHOP": 0.83,
        "Our Model": 0.91
    }
    df = pd.DataFrame(list(comparison_results.items()), columns=["Model", "Accuracy"])
    st.write("### Model Benchmarking Results")
    st.dataframe(df)

# Streamlit UI
st.set_page_config(page_title="AI-Driven CRISPR Therapy", layout="wide")
st.title("AI-Driven CRISPR Cancer Immunotherapy Platform")

st.sidebar.header("Navigation")
page = st.sidebar.radio("Select a Page", ["Home", "Federated Learning", "Model Benchmarking"])

if page == "Federated Learning":
    st.header("Federated Learning Training")
    if st.button("Train Model Using Federated Learning"):
        train_federated_model()

elif page == "Model Benchmarking":
    st.header("AI Model Benchmarking")
    if st.button("Run Benchmarking Tests"):
        benchmark_ai_model()

else:
    st.write("Welcome to the AI-driven CRISPR cancer immunotherapy platform.")
